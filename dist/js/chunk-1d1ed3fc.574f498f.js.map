{"version":3,"sources":["webpack:///../../../src/components/VSkeletonLoader/VSkeletonLoader.ts","webpack:///../../../src/components/VToolbar/VToolbar.ts","webpack:///../../../src/components/VResponsive/VResponsive.ts","webpack:///../../../src/components/VResponsive/index.ts","webpack:///../../../src/components/VImg/VImg.ts"],"names":["name","props","boilerplate","loading","tile","transition","type","types","default","computed","attrs","this","role","$attrs","classes","elevationClasses","isLoading","rootTypes","actions","article","avatar","button","card","chip","heading","image","paragraph","sentences","table","text","methods","genBone","$createElement","staticClass","genBones","bone","generator","Array","length","genStructure","children","mapBones","genSkeleton","on","afterEnter","beforeEnter","beforeLeave","leaveCancelled","resetStyles","bones","onBeforeEnter","el","display","onBeforeLeave","render","h","class","style","undefined","absolute","bottom","collapse","dense","extended","extensionHeight","Number","String","flat","floating","prominent","short","src","tag","data","isExtended","computedHeight","height","parseInt","isCollapsed","isNaN","computedContentHeight","isProminent","$vuetify","breakpoint","styles","created","breakingProps","original","replacement","genBackground","$scopedSlots","img","genContent","genExtension","setBackgroundColor","$listeners","mixins","aspectRatio","contentClass","computedAspectRatio","aspectStyle","paddingBottom","__cachedSizer","$slots","hasIntersect","window","directives","intersect","alt","contain","eager","gradient","lazySrc","options","root","rootMargin","threshold","position","sizes","srcset","Boolean","currentSrc","calculatedAspectRatio","naturalWidth","hasError","normalisedSrc","aspect","__cachedImage","backgroundImage","backgroundPosition","key","mode","watch","loadImage","init","mounted","lazyImg","onLoad","endsWith","startsWith","naturalHeight","onError","getSrc","err","console","pollForSize","timeout","poll","setTimeout","content","width","__genPlaceholder","placeholder","appear","node","mergeData","modifiers","once","value","handler"],"mappings":"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","file":"js/chunk-1d1ed3fc.574f498f.js","sourcesContent":["// Styles\nimport './VSkeletonLoader.sass'\n\n// Mixins\nimport Elevatable from '../../mixins/elevatable'\nimport Measurable from '../../mixins/measurable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\nimport { getSlot } from '../../util/helpers'\nimport { PropValidator } from 'vue/types/options'\n\nexport interface HTMLSkeletonLoaderElement extends HTMLElement {\n  _initialStyle?: {\n    display: string | null\n    transition: string\n  }\n}\n\n/* @vue/component */\nexport default mixins(\n  Elevatable,\n  Measurable,\n  Themeable,\n).extend({\n  name: 'VSkeletonLoader',\n\n  props: {\n    boilerplate: Boolean,\n    loading: Boolean,\n    tile: Boolean,\n    transition: String,\n    type: String,\n    types: {\n      type: Object,\n      default: () => ({}),\n    } as PropValidator<Record<string, string>>,\n  },\n\n  computed: {\n    attrs (): object {\n      if (!this.isLoading) return this.$attrs\n\n      return !this.boilerplate ? {\n        'aria-busy': true,\n        'aria-live': 'polite',\n        role: 'alert',\n        ...this.$attrs,\n      } : {}\n    },\n    classes (): object {\n      return {\n        'v-skeleton-loader--boilerplate': this.boilerplate,\n        'v-skeleton-loader--is-loading': this.isLoading,\n        'v-skeleton-loader--tile': this.tile,\n        ...this.themeClasses,\n        ...this.elevationClasses,\n      }\n    },\n    isLoading (): boolean {\n      return !('default' in this.$scopedSlots) || this.loading\n    },\n    rootTypes (): Record<string, string> {\n      return {\n        actions: 'button@2',\n        article: 'heading, paragraph',\n        avatar: 'avatar',\n        button: 'button',\n        card: 'image, card-heading',\n        'card-avatar': 'image, list-item-avatar',\n        'card-heading': 'heading',\n        chip: 'chip',\n        'date-picker': 'list-item, card-heading, divider, date-picker-options, date-picker-days, actions',\n        'date-picker-options': 'text, avatar@2',\n        'date-picker-days': 'avatar@28',\n        heading: 'heading',\n        image: 'image',\n        'list-item': 'text',\n        'list-item-avatar': 'avatar, text',\n        'list-item-two-line': 'sentences',\n        'list-item-avatar-two-line': 'avatar, sentences',\n        'list-item-three-line': 'paragraph',\n        'list-item-avatar-three-line': 'avatar, paragraph',\n        paragraph: 'text@3',\n        sentences: 'text@2',\n        table: 'table-heading, table-thead, table-tbody, table-tfoot',\n        'table-heading': 'heading, text',\n        'table-thead': 'heading@6',\n        'table-tbody': 'table-row-divider@6',\n        'table-row-divider': 'table-row, divider',\n        'table-row': 'table-cell@6',\n        'table-cell': 'text',\n        'table-tfoot': 'text@2, avatar@2',\n        text: 'text',\n        ...this.types,\n      }\n    },\n  },\n\n  methods: {\n    genBone (text: string, children: VNode[]) {\n      return this.$createElement('div', {\n        staticClass: `v-skeleton-loader__${text} v-skeleton-loader__bone`,\n      }, children)\n    },\n    genBones (bone: string): VNode[] {\n      // e.g. 'text@3'\n      const [type, length] = bone.split('@') as [string, number]\n      const generator = () => this.genStructure(type)\n\n      // Generate a length array based upon\n      // value after @ in the bone string\n      return Array.from({ length }).map(generator)\n    },\n    // Fix type when this is merged\n    // https://github.com/microsoft/TypeScript/pull/33050\n    genStructure (type?: string): any {\n      let children = []\n      type = type || this.type || ''\n      const bone = this.rootTypes[type] || ''\n\n      // End of recursion, do nothing\n      /* eslint-disable-next-line no-empty, brace-style */\n      if (type === bone) {}\n      // Array of values - e.g. 'heading, paragraph, text@2'\n      else if (type.indexOf(',') > -1) return this.mapBones(type)\n      // Array of values - e.g. 'paragraph@4'\n      else if (type.indexOf('@') > -1) return this.genBones(type)\n      // Array of values - e.g. 'card@2'\n      else if (bone.indexOf(',') > -1) children = this.mapBones(bone)\n      // Array of values - e.g. 'list-item@2'\n      else if (bone.indexOf('@') > -1) children = this.genBones(bone)\n      // Single value - e.g. 'card-heading'\n      else if (bone) children.push(this.genStructure(bone))\n\n      return [this.genBone(type, children)]\n    },\n    genSkeleton () {\n      const children = []\n\n      if (!this.isLoading) children.push(getSlot(this))\n      else children.push(this.genStructure())\n\n      /* istanbul ignore else */\n      if (!this.transition) return children\n\n      /* istanbul ignore next */\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n        },\n        // Only show transition when\n        // content has been loaded\n        on: {\n          afterEnter: this.resetStyles,\n          beforeEnter: this.onBeforeEnter,\n          beforeLeave: this.onBeforeLeave,\n          leaveCancelled: this.resetStyles,\n        },\n      }, children)\n    },\n    mapBones (bones: string) {\n      // Remove spaces and return array of structures\n      return bones.replace(/\\s/g, '').split(',').map(this.genStructure)\n    },\n    onBeforeEnter (el: HTMLSkeletonLoaderElement) {\n      this.resetStyles(el)\n\n      if (!this.isLoading) return\n\n      el._initialStyle = {\n        display: el.style.display,\n        transition: el.style.transition,\n      }\n\n      el.style.setProperty('transition', 'none', 'important')\n    },\n    onBeforeLeave (el: HTMLSkeletonLoaderElement) {\n      el.style.setProperty('display', 'none', 'important')\n    },\n    resetStyles (el: HTMLSkeletonLoaderElement) {\n      if (!el._initialStyle) return\n\n      el.style.display = el._initialStyle.display || ''\n      el.style.transition = el._initialStyle.transition\n\n      delete el._initialStyle\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-skeleton-loader',\n      attrs: this.attrs,\n      on: this.$listeners,\n      class: this.classes,\n      style: this.isLoading ? this.measurableStyles : undefined,\n    }, [this.genSkeleton()])\n  },\n})\n","// Styles\nimport './VToolbar.sass'\n\n// Extensions\nimport VSheet from '../VSheet/VSheet'\n\n// Components\nimport VImg, { srcObject } from '../VImg/VImg'\n\n// Utilities\nimport { convertToUnit, getSlot } from '../../util/helpers'\nimport { breaking } from '../../util/console'\n\n// Types\nimport { VNode, PropType } from 'vue'\n\n/* @vue/component */\nexport default VSheet.extend({\n  name: 'v-toolbar',\n\n  props: {\n    absolute: Boolean,\n    bottom: Boolean,\n    collapse: Boolean,\n    dense: Boolean,\n    extended: Boolean,\n    extensionHeight: {\n      default: 48,\n      type: [Number, String],\n    },\n    flat: Boolean,\n    floating: Boolean,\n    prominent: Boolean,\n    short: Boolean,\n    src: {\n      type: [String, Object] as PropType<string | srcObject>,\n      default: '',\n    },\n    tag: {\n      type: String,\n      default: 'header',\n    },\n  },\n\n  data: () => ({\n    isExtended: false,\n  }),\n\n  computed: {\n    computedHeight (): number {\n      const height = this.computedContentHeight\n\n      if (!this.isExtended) return height\n\n      const extensionHeight = parseInt(this.extensionHeight)\n\n      return this.isCollapsed\n        ? height\n        : height + (!isNaN(extensionHeight) ? extensionHeight : 0)\n    },\n    computedContentHeight (): number {\n      if (this.height) return parseInt(this.height)\n      if (this.isProminent && this.dense) return 96\n      if (this.isProminent && this.short) return 112\n      if (this.isProminent) return 128\n      if (this.dense) return 48\n      if (this.short || this.$vuetify.breakpoint.smAndDown) return 56\n      return 64\n    },\n    classes (): object {\n      return {\n        ...VSheet.options.computed.classes.call(this),\n        'v-toolbar': true,\n        'v-toolbar--absolute': this.absolute,\n        'v-toolbar--bottom': this.bottom,\n        'v-toolbar--collapse': this.collapse,\n        'v-toolbar--collapsed': this.isCollapsed,\n        'v-toolbar--dense': this.dense,\n        'v-toolbar--extended': this.isExtended,\n        'v-toolbar--flat': this.flat,\n        'v-toolbar--floating': this.floating,\n        'v-toolbar--prominent': this.isProminent,\n      }\n    },\n    isCollapsed (): boolean {\n      return this.collapse\n    },\n    isProminent (): boolean {\n      return this.prominent\n    },\n    styles (): object {\n      return {\n        ...this.measurableStyles,\n        height: convertToUnit(this.computedHeight),\n      }\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['app', '<v-app-bar app>'],\n      ['manual-scroll', '<v-app-bar :value=\"false\">'],\n      ['clipped-left', '<v-app-bar clipped-left>'],\n      ['clipped-right', '<v-app-bar clipped-right>'],\n      ['inverted-scroll', '<v-app-bar inverted-scroll>'],\n      ['scroll-off-screen', '<v-app-bar scroll-off-screen>'],\n      ['scroll-target', '<v-app-bar scroll-target>'],\n      ['scroll-threshold', '<v-app-bar scroll-threshold>'],\n      ['card', '<v-app-bar flat>'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    genBackground () {\n      const props = {\n        height: convertToUnit(this.computedHeight),\n        src: this.src,\n      }\n\n      const image = this.$scopedSlots.img\n        ? this.$scopedSlots.img({ props })\n        : this.$createElement(VImg, { props })\n\n      return this.$createElement('div', {\n        staticClass: 'v-toolbar__image',\n      }, [image])\n    },\n    genContent () {\n      return this.$createElement('div', {\n        staticClass: 'v-toolbar__content',\n        style: {\n          height: convertToUnit(this.computedContentHeight),\n        },\n      }, getSlot(this))\n    },\n    genExtension () {\n      return this.$createElement('div', {\n        staticClass: 'v-toolbar__extension',\n        style: {\n          height: convertToUnit(this.extensionHeight),\n        },\n      }, getSlot(this, 'extension'))\n    },\n  },\n\n  render (h): VNode {\n    this.isExtended = this.extended || !!this.$scopedSlots.extension\n\n    const children = [this.genContent()]\n    const data = this.setBackgroundColor(this.color, {\n      class: this.classes,\n      style: this.styles,\n      on: this.$listeners,\n    })\n\n    if (this.isExtended) children.push(this.genExtension())\n    if (this.src || this.$scopedSlots.img) children.unshift(this.genBackground())\n\n    return h(this.tag, data, children)\n  },\n})\n","import './VResponsive.sass'\n\n// Mixins\nimport Measurable, { NumberOrNumberString } from '../../mixins/measurable'\n\n// Types\nimport { VNode } from 'vue'\n\n// Utils\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(Measurable).extend({\n  name: 'v-responsive',\n\n  props: {\n    aspectRatio: [String, Number] as NumberOrNumberString,\n    contentClass: String,\n  },\n\n  computed: {\n    computedAspectRatio (): number {\n      return Number(this.aspectRatio)\n    },\n    aspectStyle (): object | undefined {\n      return this.computedAspectRatio\n        ? { paddingBottom: (1 / this.computedAspectRatio) * 100 + '%' }\n        : undefined\n    },\n    __cachedSizer (): VNode | [] {\n      if (!this.aspectStyle) return []\n\n      return this.$createElement('div', {\n        style: this.aspectStyle,\n        staticClass: 'v-responsive__sizer',\n      })\n    },\n  },\n\n  methods: {\n    genContent (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-responsive__content',\n        class: this.contentClass,\n      }, this.$slots.default)\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-responsive',\n      style: this.measurableStyles,\n      on: this.$listeners,\n    }, [\n      this.__cachedSizer,\n      this.genContent(),\n    ])\n  },\n})\n","import VResponsive from './VResponsive'\n\nexport { VResponsive }\nexport default VResponsive\n","// Styles\nimport './VImg.sass'\n\n// Directives\nimport intersect from '../../directives/intersect'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\n// Components\nimport VResponsive from '../VResponsive'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\n\n// Utils\nimport mixins from '../../util/mixins'\nimport mergeData from '../../util/mergeData'\nimport { consoleWarn } from '../../util/console'\n\n// not intended for public use, this is passed in by vuetify-loader\nexport interface srcObject {\n  src: string\n  srcset?: string\n  lazySrc: string\n  aspect: number\n}\n\nconst hasIntersect = typeof window !== 'undefined' && 'IntersectionObserver' in window\n\n/* @vue/component */\nexport default mixins(\n  VResponsive,\n  Themeable,\n).extend({\n  name: 'v-img',\n\n  directives: { intersect },\n\n  props: {\n    alt: String,\n    contain: Boolean,\n    eager: Boolean,\n    gradient: String,\n    lazySrc: String,\n    options: {\n      type: Object,\n      // For more information on types, navigate to:\n      // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n      default: () => ({\n        root: undefined,\n        rootMargin: undefined,\n        threshold: undefined,\n      }),\n    } as PropValidator<IntersectionObserverInit>,\n    position: {\n      type: String,\n      default: 'center center',\n    },\n    sizes: String,\n    src: {\n      type: [String, Object],\n      default: '',\n    } as PropValidator<string | srcObject>,\n    srcset: String,\n    transition: {\n      type: [Boolean, String],\n      default: 'fade-transition',\n    },\n  },\n\n  data () {\n    return {\n      currentSrc: '', // Set from srcset\n      image: null as HTMLImageElement | null,\n      isLoading: true,\n      calculatedAspectRatio: undefined as number | undefined,\n      naturalWidth: undefined as number | undefined,\n      hasError: false,\n    }\n  },\n\n  computed: {\n    computedAspectRatio (): number {\n      return Number(this.normalisedSrc.aspect || this.calculatedAspectRatio)\n    },\n    normalisedSrc (): srcObject {\n      return this.src && typeof this.src === 'object'\n        ? {\n          src: this.src.src,\n          srcset: this.srcset || this.src.srcset,\n          lazySrc: this.lazySrc || this.src.lazySrc,\n          aspect: Number(this.aspectRatio || this.src.aspect),\n        } : {\n          src: this.src,\n          srcset: this.srcset,\n          lazySrc: this.lazySrc,\n          aspect: Number(this.aspectRatio || 0),\n        }\n    },\n    __cachedImage (): VNode | [] {\n      if (!(this.normalisedSrc.src || this.normalisedSrc.lazySrc || this.gradient)) return []\n\n      const backgroundImage: string[] = []\n      const src = this.isLoading ? this.normalisedSrc.lazySrc : this.currentSrc\n\n      if (this.gradient) backgroundImage.push(`linear-gradient(${this.gradient})`)\n      if (src) backgroundImage.push(`url(\"${src}\")`)\n\n      const image = this.$createElement('div', {\n        staticClass: 'v-image__image',\n        class: {\n          'v-image__image--preload': this.isLoading,\n          'v-image__image--contain': this.contain,\n          'v-image__image--cover': !this.contain,\n        },\n        style: {\n          backgroundImage: backgroundImage.join(', '),\n          backgroundPosition: this.position,\n        },\n        key: +this.isLoading,\n      })\n\n      /* istanbul ignore if */\n      if (!this.transition) return image\n\n      return this.$createElement('transition', {\n        attrs: {\n          name: this.transition,\n          mode: 'in-out',\n        },\n      }, [image])\n    },\n  },\n\n  watch: {\n    src () {\n      // Force re-init when src changes\n      if (!this.isLoading) this.init(undefined, undefined, true)\n      else this.loadImage()\n    },\n    '$vuetify.breakpoint.width': 'getSrc',\n  },\n\n  mounted () {\n    this.init()\n  },\n\n  methods: {\n    init (\n      entries?: IntersectionObserverEntry[],\n      observer?: IntersectionObserver,\n      isIntersecting?: boolean\n    ) {\n      // If the current browser supports the intersection\n      // observer api, the image is not observable, and\n      // the eager prop isn't being used, do not load\n      if (\n        hasIntersect &&\n        !isIntersecting &&\n        !this.eager\n      ) return\n\n      if (this.normalisedSrc.lazySrc) {\n        const lazyImg = new Image()\n        lazyImg.src = this.normalisedSrc.lazySrc\n        this.pollForSize(lazyImg, null)\n      }\n      /* istanbul ignore else */\n      if (this.normalisedSrc.src) this.loadImage()\n    },\n    onLoad () {\n      this.getSrc()\n      this.isLoading = false\n      this.$emit('load', this.src)\n\n      if (\n        this.image &&\n        (this.normalisedSrc.src.endsWith('.svg') || this.normalisedSrc.src.startsWith('data:image/svg+xml'))\n      ) {\n        if (this.image.naturalHeight && this.image.naturalWidth) {\n          this.naturalWidth = this.image.naturalWidth\n          this.calculatedAspectRatio = this.image.naturalWidth / this.image.naturalHeight\n        } else {\n          this.calculatedAspectRatio = 1\n        }\n      }\n    },\n    onError () {\n      this.hasError = true\n      this.$emit('error', this.src)\n    },\n    getSrc () {\n      /* istanbul ignore else */\n      if (this.image) this.currentSrc = this.image.currentSrc || this.image.src\n    },\n    loadImage () {\n      const image = new Image()\n      this.image = image\n\n      image.onload = () => {\n        /* istanbul ignore if */\n        if (image.decode) {\n          image.decode().catch((err: DOMException) => {\n            consoleWarn(\n              `Failed to decode image, trying to render anyway\\n\\n` +\n              `src: ${this.normalisedSrc.src}` +\n              (err.message ? `\\nOriginal error: ${err.message}` : ''),\n              this\n            )\n          }).then(this.onLoad)\n        } else {\n          this.onLoad()\n        }\n      }\n      image.onerror = this.onError\n\n      this.hasError = false\n      this.sizes && (image.sizes = this.sizes)\n      this.normalisedSrc.srcset && (image.srcset = this.normalisedSrc.srcset)\n      image.src = this.normalisedSrc.src\n      this.$emit('loadstart', this.normalisedSrc.src)\n\n      this.aspectRatio || this.pollForSize(image)\n      this.getSrc()\n    },\n    pollForSize (img: HTMLImageElement, timeout: number | null = 100) {\n      const poll = () => {\n        const { naturalHeight, naturalWidth } = img\n\n        if (naturalHeight || naturalWidth) {\n          this.naturalWidth = naturalWidth\n          this.calculatedAspectRatio = naturalWidth / naturalHeight\n        } else if (!img.complete && this.isLoading && !this.hasError && timeout != null) {\n          setTimeout(poll, timeout)\n        }\n      }\n\n      poll()\n    },\n    genContent () {\n      const content: VNode = VResponsive.options.methods.genContent.call(this)\n      if (this.naturalWidth) {\n        this._b(content.data!, 'div', {\n          style: { width: `${this.naturalWidth}px` },\n        })\n      }\n\n      return content\n    },\n    __genPlaceholder (): VNode | void {\n      if (this.$slots.placeholder) {\n        const placeholder = this.isLoading\n          ? [this.$createElement('div', {\n            staticClass: 'v-image__placeholder',\n          }, this.$slots.placeholder)]\n          : []\n\n        if (!this.transition) return placeholder[0]\n\n        return this.$createElement('transition', {\n          props: {\n            appear: true,\n            name: this.transition,\n          },\n        }, placeholder)\n      }\n    },\n  },\n\n  render (h): VNode {\n    const node = VResponsive.options.render.call(this, h)\n\n    const data = mergeData(node.data!, {\n      staticClass: 'v-image',\n      attrs: {\n        'aria-label': this.alt,\n        role: this.alt ? 'img' : undefined,\n      },\n      class: this.themeClasses,\n      // Only load intersect directive if it\n      // will work in the current browser.\n      directives: hasIntersect\n        ? [{\n          name: 'intersect',\n          modifiers: { once: true },\n          value: {\n            handler: this.init,\n            options: this.options,\n          },\n        }]\n        : undefined,\n    })\n\n    node.children = [\n      this.__cachedSizer,\n      this.__cachedImage,\n      this.__genPlaceholder(),\n      this.genContent(),\n    ] as VNode[]\n\n    return h(node.tag, data, node.children)\n  },\n})\n"],"sourceRoot":""}