{"version":3,"sources":["webpack:///../../../src/components/VToolbar/index.ts","webpack:///./node_modules/core-js/modules/es.math.sign.js","webpack:///../../../src/directives/scroll/index.ts","webpack:///../../../src/mixins/scrollable/index.ts","webpack:///../../../src/components/VAppBar/VAppBar.ts","webpack:///../../../src/components/VTabs/VTab.ts","webpack:///../../../src/components/VTabs/VTabsItems.ts","webpack:///../../../src/components/VTabs/VTabItem.ts","webpack:///../../../src/mixins/mobile/index.ts","webpack:///../../../src/components/VSlideGroup/VSlideGroup.ts","webpack:///../../../src/components/VTabs/VTabsBar.ts","webpack:///../../../src/components/VTabs/VTabsSlider.ts","webpack:///../../../src/components/VTabs/VTabs.ts"],"names":["VToolbarTitle","VToolbarItems","$","sign","target","stat","inserted","binding","self","value","options","passive","handler","document","el","Object","vnode","undefined","unbind","Scroll","name","directives","props","scrollTarget","scrollThreshold","String","Number","data","currentScroll","currentThreshold","isActive","isScrollingUp","previousScroll","savedScroll","computed","canScroll","window","computedScrollThreshold","this","watch","mounted","console","methods","onScroll","Math","thresholdMet","baseMixins","mixins","provide","VAppBar","clippedLeft","clippedRight","collapseOnScroll","elevateOnScroll","fadeImgOnScroll","hideOnScroll","invertedScroll","scrollOffScreen","shrinkOnScroll","type","default","applicationProperty","classes","VToolbar","collapse","app","scrollRatio","threshold","computedContentHeight","min","dense","max","computedFontSize","computedLeft","$vuetify","application","computedMarginTop","computedOpacity","computedOriginalHeight","height","parseInt","computedRight","computedTransform","bottom","hideShadow","isCollapsed","isProminent","styles","fontSize","marginTop","transform","left","right","val","created","genBackground","render","_b","style","opacity","updateApplication","computedHeight","arg","ripple","Boolean","proxyClass","groupClasses","to","$router","resolve","click","e","href","indexOf","$el","blur","toggle","tabsBar","role","tabindex","keydown","h","tag","$slots","mandatory","isDark","getValue","item","id","genWindowItem","mobileBreakpoint","breakpoint","validator","v","isNaN","includes","isMobile","mobile","mobileWidth","isNumber","width","$attrs","hasOwnProperty","bias","c","x","clientWidth","selectedElement","offsetLeft","rtl","widths","currentScrollOffset","totalWidth","itemOffset","additionalOffset","offsetCentered","BaseSlideGroup","Resize","Touch","activeClass","centerActive","nextIcon","prevIcon","showArrows","internalItemsLength","isOverflowing","resizeTimeout","startX","isSwipingHorizontal","isSwiping","scrollOffset","content","wrapper","canTouch","__cachedNext","genTransition","__cachedPrev","hasAffixes","hasNext","hasPrev","internalValue","scroll","beforeUpdate","$children","updated","onFocusin","vm","calculateUpdatedOffset","genNext","slot","$scopedSlots","next","$createElement","staticClass","class","on","key","genContent","ref","focusin","genData","onResize","genIcon","icon","location","upperLocation","hasAffix","VIcon","disabled","genPrev","prev","genWrapper","start","move","end","calculateNewOffset","newAbosluteOffset","direction","onAffixClick","onTouchStart","onTouchMove","diffX","diffY","onTouchEnd","maxScrollOffset","overflowCheck","fn","scrollIntoView","items","lastItemPosition","length","wrapperPosition","$refs","selectedIndex","calculateCenteredOffset","selectedItem","scrollTo","setWidths","slideGroup","themeClasses","$route","callSlider","onRouteChange","newPath","oldPath","oldVal","hasNew","hasOld","setBackgroundColor","alignWithTitle","backgroundColor","centered","fixedTabs","grow","hideSlider","iconsAndText","optional","sliderColor","sliderSize","vertical","slider","top","transitionTime","isReversed","sliderStyles","transition","computedColor","selectedItems","activeTab","scrollWidth","genBar","dark","light","change","VTabsBar","genSlider","genItems","VTabsItems","VTabsSlider","color","clearTimeout","parseNodes","tab","i","modifiers","quiet"],"mappings":"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","file":"js/chunk-dc301792.5468a572.js","sourcesContent":["// Components\nimport VToolbar from './VToolbar'\n\n// Utilities\nimport { createSimpleFunctional } from '../../util/helpers'\n\nconst VToolbarTitle = createSimpleFunctional('v-toolbar__title')\nconst VToolbarItems = createSimpleFunctional('v-toolbar__items')\n\nexport {\n  VToolbar,\n  VToolbarItems,\n  VToolbarTitle,\n}\n\nexport default {\n  $_vuetify_subcomponents: {\n    VToolbar,\n    VToolbarItems,\n    VToolbarTitle,\n  },\n}\n","var $ = require('../internals/export');\nvar sign = require('../internals/math-sign');\n\n// `Math.sign` method\n// https://tc39.es/ecma262/#sec-math.sign\n$({ target: 'Math', stat: true }, {\n  sign: sign\n});\n","import { VNodeDirective } from 'vue/types/vnode'\nimport { DirectiveOptions, VNode } from 'vue'\n\ninterface ScrollVNodeDirective extends Omit<VNodeDirective, 'modifiers'> {\n  value: EventListener | {\n    handler: EventListener\n    options?: boolean | AddEventListenerOptions\n  } | EventListenerObject & { options?: boolean | AddEventListenerOptions }\n  modifiers?: {\n    self?: boolean\n  }\n}\n\nfunction inserted (el: HTMLElement, binding: ScrollVNodeDirective, vnode: VNode) {\n  const { self = false } = binding.modifiers || {}\n  const value = binding.value\n  const options = (typeof value === 'object' && value.options) || { passive: true }\n  const handler = typeof value === 'function' || 'handleEvent' in value ? value : value.handler\n\n  const target = self\n    ? el\n    : binding.arg\n      ? document.querySelector(binding.arg)\n      : window\n\n  if (!target) return\n\n  target.addEventListener('scroll', handler, options)\n\n  el._onScroll = Object(el._onScroll)\n  el._onScroll![vnode.context!._uid] = {\n    handler,\n    options,\n    // Don't reference self\n    target: self ? undefined : target,\n  }\n}\n\nfunction unbind (el: HTMLElement, binding: ScrollVNodeDirective, vnode: VNode) {\n  if (!el._onScroll?.[vnode.context!._uid]) return\n\n  const { handler, options, target = el } = el._onScroll[vnode.context!._uid]!\n\n  target.removeEventListener('scroll', handler, options)\n  delete el._onScroll[vnode.context!._uid]\n}\n\nexport const Scroll = {\n  inserted,\n  unbind,\n} as DirectiveOptions\n\nexport default Scroll\n","// Directives\nimport { Scroll } from '../../directives'\n\n// Utilities\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue from 'vue'\n\n/**\n * Scrollable\n *\n * Used for monitoring scrolling and\n * invoking functions based upon\n * scrolling thresholds being\n * met.\n */\n/* @vue/component */\nexport default Vue.extend({\n  name: 'scrollable',\n\n  directives: { Scroll },\n\n  props: {\n    scrollTarget: String,\n    scrollThreshold: [String, Number],\n  },\n\n  data: () => ({\n    currentScroll: 0,\n    currentThreshold: 0,\n    isActive: false,\n    isScrollingUp: false,\n    previousScroll: 0,\n    savedScroll: 0,\n    target: null as Element | null,\n  }),\n\n  computed: {\n    /**\n     * A computed property that returns\n     * whether scrolling features are\n     * enabled or disabled\n     */\n    canScroll (): boolean {\n      return typeof window !== 'undefined'\n    },\n    /**\n     * The threshold that must be met before\n     * thresholdMet function is invoked\n     */\n    computedScrollThreshold (): number {\n      return this.scrollThreshold\n        ? Number(this.scrollThreshold)\n        : 300\n    },\n  },\n\n  watch: {\n    isScrollingUp () {\n      this.savedScroll = this.savedScroll || this.currentScroll\n    },\n    isActive () {\n      this.savedScroll = 0\n    },\n  },\n\n  mounted () {\n    if (this.scrollTarget) {\n      this.target = document.querySelector(this.scrollTarget)\n\n      if (!this.target) {\n        consoleWarn(`Unable to locate element with identifier ${this.scrollTarget}`, this)\n      }\n    }\n  },\n\n  methods: {\n    onScroll () {\n      if (!this.canScroll) return\n\n      this.previousScroll = this.currentScroll\n      this.currentScroll = this.target\n        ? this.target.scrollTop\n        : window.pageYOffset\n\n      this.isScrollingUp = this.currentScroll < this.previousScroll\n      this.currentThreshold = Math.abs(this.currentScroll - this.computedScrollThreshold)\n\n      this.$nextTick(() => {\n        if (\n          Math.abs(this.currentScroll - this.savedScroll) >\n          this.computedScrollThreshold\n        ) this.thresholdMet()\n      })\n    },\n    /**\n     * The method invoked when\n     * scrolling in any direction\n     * has exceeded the threshold\n     */\n    thresholdMet () { /* noop */ },\n  },\n})\n","// Styles\nimport './VAppBar.sass'\n\n// Extensions\nimport VToolbar from '../VToolbar/VToolbar'\n\n// Directives\nimport Scroll from '../../directives/scroll'\n\n// Mixins\nimport Applicationable from '../../mixins/applicationable'\nimport Scrollable from '../../mixins/scrollable'\nimport SSRBootable from '../../mixins/ssr-bootable'\nimport Toggleable from '../../mixins/toggleable'\n\n// Utilities\nimport { convertToUnit } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nconst baseMixins = mixins(\n  VToolbar,\n  Scrollable,\n  SSRBootable,\n  Toggleable,\n  Applicationable('top', [\n    'clippedLeft',\n    'clippedRight',\n    'computedHeight',\n    'invertedScroll',\n    'isExtended',\n    'isProminent',\n    'value',\n  ])\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-app-bar',\n\n  directives: { Scroll },\n\n  provide (): object {\n    return { VAppBar: this }\n  },\n\n  props: {\n    clippedLeft: Boolean,\n    clippedRight: Boolean,\n    collapseOnScroll: Boolean,\n    elevateOnScroll: Boolean,\n    fadeImgOnScroll: Boolean,\n    hideOnScroll: Boolean,\n    invertedScroll: Boolean,\n    scrollOffScreen: Boolean,\n    shrinkOnScroll: Boolean,\n    value: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  data () {\n    return {\n      isActive: this.value,\n    }\n  },\n\n  computed: {\n    applicationProperty (): string {\n      return !this.bottom ? 'top' : 'bottom'\n    },\n    canScroll (): boolean {\n      return (\n        Scrollable.options.computed.canScroll.call(this) &&\n        (\n          this.invertedScroll ||\n          this.elevateOnScroll ||\n          this.hideOnScroll ||\n          this.collapseOnScroll ||\n          this.isBooted ||\n          // If falsy, user has provided an\n          // explicit value which should\n          // overwrite anything we do\n          !this.value\n        )\n      )\n    },\n    classes (): object {\n      return {\n        ...VToolbar.options.computed.classes.call(this),\n        'v-toolbar--collapse': this.collapse || this.collapseOnScroll,\n        'v-app-bar': true,\n        'v-app-bar--clipped': this.clippedLeft || this.clippedRight,\n        'v-app-bar--fade-img-on-scroll': this.fadeImgOnScroll,\n        'v-app-bar--elevate-on-scroll': this.elevateOnScroll,\n        'v-app-bar--fixed': !this.absolute && (this.app || this.fixed),\n        'v-app-bar--hide-shadow': this.hideShadow,\n        'v-app-bar--is-scrolled': this.currentScroll > 0,\n        'v-app-bar--shrink-on-scroll': this.shrinkOnScroll,\n      }\n    },\n    scrollRatio (): number {\n      const threshold = this.computedScrollThreshold\n      return Math.max((threshold - this.currentScroll) / threshold, 0)\n    },\n    computedContentHeight (): number {\n      if (!this.shrinkOnScroll) return VToolbar.options.computed.computedContentHeight.call(this)\n\n      const min = this.dense ? 48 : 56\n      const max = this.computedOriginalHeight\n\n      return min + (max - min) * this.scrollRatio\n    },\n    computedFontSize (): number | undefined {\n      if (!this.isProminent) return undefined\n\n      const min = 1.25\n      const max = 1.5\n\n      return min + (max - min) * this.scrollRatio\n    },\n    computedLeft (): number {\n      if (!this.app || this.clippedLeft) return 0\n\n      return this.$vuetify.application.left\n    },\n    computedMarginTop (): number {\n      if (!this.app) return 0\n\n      return this.$vuetify.application.bar\n    },\n    computedOpacity (): number | undefined {\n      if (!this.fadeImgOnScroll) return undefined\n\n      return this.scrollRatio\n    },\n    computedOriginalHeight (): number {\n      let height = VToolbar.options.computed.computedContentHeight.call(this)\n      if (this.isExtended) height += parseInt(this.extensionHeight)\n      return height\n    },\n    computedRight (): number {\n      if (!this.app || this.clippedRight) return 0\n\n      return this.$vuetify.application.right\n    },\n    computedScrollThreshold (): number {\n      if (this.scrollThreshold) return Number(this.scrollThreshold)\n\n      return this.computedOriginalHeight - (this.dense ? 48 : 56)\n    },\n    computedTransform (): number {\n      if (\n        !this.canScroll ||\n        (this.elevateOnScroll && this.currentScroll === 0 && this.isActive)\n      ) return 0\n\n      if (this.isActive) return 0\n\n      const scrollOffScreen = this.scrollOffScreen\n        ? this.computedHeight\n        : this.computedContentHeight\n\n      return this.bottom ? scrollOffScreen : -scrollOffScreen\n    },\n    hideShadow (): boolean {\n      if (this.elevateOnScroll && this.isExtended) {\n        return this.currentScroll < this.computedScrollThreshold\n      }\n\n      if (this.elevateOnScroll) {\n        return this.currentScroll === 0 ||\n          this.computedTransform < 0\n      }\n\n      return (\n        !this.isExtended ||\n        this.scrollOffScreen\n      ) && this.computedTransform !== 0\n    },\n    isCollapsed (): boolean {\n      if (!this.collapseOnScroll) {\n        return VToolbar.options.computed.isCollapsed.call(this)\n      }\n\n      return this.currentScroll > 0\n    },\n    isProminent (): boolean {\n      return (\n        VToolbar.options.computed.isProminent.call(this) ||\n        this.shrinkOnScroll\n      )\n    },\n    styles (): object {\n      return {\n        ...VToolbar.options.computed.styles.call(this),\n        fontSize: convertToUnit(this.computedFontSize, 'rem'),\n        marginTop: convertToUnit(this.computedMarginTop),\n        transform: `translateY(${convertToUnit(this.computedTransform)})`,\n        left: convertToUnit(this.computedLeft),\n        right: convertToUnit(this.computedRight),\n      }\n    },\n  },\n\n  watch: {\n    canScroll: 'onScroll',\n    computedTransform () {\n      // Normally we do not want the v-app-bar\n      // to update the application top value\n      // to avoid screen jump. However, in\n      // this situation, we must so that\n      // the clipped drawer can update\n      // its top value when scrolled\n      if (\n        !this.canScroll ||\n        (!this.clippedLeft && !this.clippedRight)\n      ) return\n\n      this.callUpdate()\n    },\n    invertedScroll (val: boolean) {\n      this.isActive = !val || this.currentScroll !== 0\n    },\n    hideOnScroll (val: boolean) {\n      this.isActive = !val || this.currentScroll < this.computedScrollThreshold\n    },\n  },\n\n  created () {\n    if (this.invertedScroll) this.isActive = false\n  },\n\n  methods: {\n    genBackground () {\n      const render = VToolbar.options.methods.genBackground.call(this)\n\n      render.data = this._b(render.data || {}, render.tag!, {\n        style: { opacity: this.computedOpacity },\n      })\n\n      return render\n    },\n    updateApplication (): number {\n      return this.invertedScroll\n        ? 0\n        : this.computedHeight + this.computedTransform\n    },\n    thresholdMet () {\n      if (this.invertedScroll) {\n        this.isActive = this.currentScroll > this.computedScrollThreshold\n        return\n      }\n\n      if (this.hideOnScroll) {\n        this.isActive = this.isScrollingUp ||\n          this.currentScroll < this.computedScrollThreshold\n      }\n\n      if (this.currentThreshold < this.computedScrollThreshold) return\n\n      this.savedScroll = this.currentScroll\n    },\n  },\n\n  render (h): VNode {\n    const render = VToolbar.options.render.call(this, h)\n\n    render.data = render.data || {}\n\n    if (this.canScroll) {\n      render.data.directives = render.data.directives || []\n      render.data.directives.push({\n        arg: this.scrollTarget,\n        name: 'scroll',\n        value: this.onScroll,\n      })\n    }\n\n    return render\n  },\n})\n","// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Routable from '../../mixins/routable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport { keyCodes } from './../../util/helpers'\nimport mixins from '../../util/mixins'\nimport { ExtractVue } from './../../util/mixins'\n\n// Types\nimport { VNode } from 'vue/types'\n\n// Components\nimport VTabsBar from '../VTabs/VTabsBar'\n\nconst baseMixins = mixins(\n  Routable,\n  // Must be after routable\n  // to overwrite activeClass\n  GroupableFactory('tabsBar'),\n  Themeable\n)\n\ntype VTabBarInstance = InstanceType<typeof VTabsBar>\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  tabsBar: VTabBarInstance\n}\n\nexport default baseMixins.extend<options>().extend(\n  /* @vue/component */\n).extend({\n  name: 'v-tab',\n\n  props: {\n    ripple: {\n      type: [Boolean, Object],\n      default: true,\n    },\n  },\n\n  data: () => ({\n    proxyClass: 'v-tab--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-tab': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-tab--disabled': this.disabled,\n        ...this.groupClasses,\n      }\n    },\n    value (): any {\n      let to = this.to || this.href\n\n      if (to == null) return to\n\n      if (this.$router &&\n        this.to === Object(this.to)\n      ) {\n        const resolve = this.$router.resolve(\n          this.to,\n          this.$route,\n          this.append\n        )\n\n        to = resolve.href\n      }\n\n      return to.replace('#', '')\n    },\n  },\n\n  methods: {\n    click (e: KeyboardEvent | MouseEvent): void {\n      // Prevent keyboard actions\n      // from children elements\n      // within disabled tabs\n      if (this.disabled) {\n        e.preventDefault()\n        return\n      }\n\n      // If user provides an\n      // actual link, do not\n      // prevent default\n      if (this.href &&\n        this.href.indexOf('#') > -1\n      ) e.preventDefault()\n\n      if (e.detail) this.$el.blur()\n\n      this.$emit('click', e)\n\n      this.to || this.toggle()\n    },\n    toggle () {\n      // VItemGroup treats a change event as a click\n      if (!this.isActive || (!this.tabsBar.mandatory && !this.to)) {\n        this.$emit('change')\n      }\n    },\n  },\n\n  render (h): VNode {\n    const { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      'aria-selected': String(this.isActive),\n      role: 'tab',\n      tabindex: 0,\n    }\n    data.on = {\n      ...data.on,\n      keydown: (e: KeyboardEvent) => {\n        if (e.keyCode === keyCodes.enter) this.click(e)\n\n        this.$emit('keydown', e)\n      },\n    }\n\n    return h(tag, data, this.$slots.default)\n  },\n})\n","// Extensions\nimport VWindow from '../VWindow/VWindow'\n\n// Types & Components\nimport { BaseItemGroup, GroupableInstance } from './../VItemGroup/VItemGroup'\n\n/* @vue/component */\nexport default VWindow.extend({\n  name: 'v-tabs-items',\n\n  props: {\n    mandatory: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VWindow.options.computed.classes.call(this),\n        'v-tabs-items': true,\n      }\n    },\n    isDark (): boolean {\n      return this.rootIsDark\n    },\n  },\n\n  methods: {\n    getValue (item: GroupableInstance, i: number) {\n      return item.id || BaseItemGroup.options.methods.getValue.call(this, item, i)\n    },\n  },\n})\n","// Extensions\nimport VWindowItem from '../VWindow/VWindowItem'\n\n/* @vue/component */\nexport default VWindowItem.extend({\n  name: 'v-tab-item',\n\n  props: {\n    id: String,\n  },\n\n  methods: {\n    genWindowItem () {\n      const item = VWindowItem.options.methods.genWindowItem.call(this)\n\n      item.data!.domProps = item.data!.domProps || {}\n      item.data!.domProps.id = this.id || this.value\n\n      return item\n    },\n  },\n})\n","// Types\nimport { BreakpointName } from 'vuetify/types/services/breakpoint'\nimport { deprecate } from '../../util/console'\nimport Vue, { PropType } from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'mobile',\n\n  props: {\n    mobileBreakpoint: {\n      type: [Number, String] as PropType<number | BreakpointName>,\n      default (): number | BreakpointName | undefined {\n        // Avoid destroying unit\n        // tests for users\n        return this.$vuetify\n          ? this.$vuetify.breakpoint.mobileBreakpoint\n          : undefined\n      },\n      validator: v => (\n        !isNaN(Number(v)) ||\n        ['xs', 'sm', 'md', 'lg', 'xl'].includes(String(v))\n      ),\n    },\n  },\n\n  computed: {\n    isMobile (): boolean {\n      const {\n        mobile,\n        width,\n        name,\n        mobileBreakpoint,\n      } = this.$vuetify.breakpoint\n\n      // Check if local mobileBreakpoint matches\n      // the application's mobileBreakpoint\n      if (mobileBreakpoint === this.mobileBreakpoint) return mobile\n\n      const mobileWidth = parseInt(this.mobileBreakpoint, 10)\n      const isNumber = !isNaN(mobileWidth)\n\n      return isNumber\n        ? width < mobileWidth\n        : name === this.mobileBreakpoint\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('mobile-break-point')) {\n      deprecate('mobile-break-point', 'mobile-breakpoint', this)\n    }\n  },\n})\n","// Styles\nimport './VSlideGroup.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport { VFadeTransition } from '../transitions'\n\n// Extensions\nimport { BaseItemGroup } from '../VItemGroup/VItemGroup'\n\n// Mixins\nimport Mobile from '../../mixins/mobile'\n\n// Directives\nimport Resize from '../../directives/resize'\nimport Touch from '../../directives/touch'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode } from 'vue'\nimport { composedPath } from '../../util/helpers'\n\ninterface TouchEvent {\n  touchstartX: number\n  touchstartY: number\n  touchmoveX: number\n  touchmoveY: number\n  stopPropagation: Function\n}\n\ninterface Widths {\n  content: number\n  wrapper: number\n}\n\ninterface options extends Vue {\n  $refs: {\n    content: HTMLElement\n    wrapper: HTMLElement\n  }\n}\n\nfunction bias (val: number) {\n  const c = 0.501\n  const x = Math.abs(val)\n  return Math.sign(val) * (x / ((1 / c - 2) * (1 - x) + 1))\n}\n\nexport function calculateUpdatedOffset (\n  selectedElement: HTMLElement,\n  widths: Widths,\n  rtl: boolean,\n  currentScrollOffset: number\n): number {\n  const clientWidth = selectedElement.clientWidth\n  const offsetLeft = rtl\n    ? (widths.content - selectedElement.offsetLeft - clientWidth)\n    : selectedElement.offsetLeft\n\n  if (rtl) {\n    currentScrollOffset = -currentScrollOffset\n  }\n\n  const totalWidth = widths.wrapper + currentScrollOffset\n  const itemOffset = clientWidth + offsetLeft\n  const additionalOffset = clientWidth * 0.4\n\n  if (offsetLeft <= currentScrollOffset) {\n    currentScrollOffset = Math.max(offsetLeft - additionalOffset, 0)\n  } else if (totalWidth <= itemOffset) {\n    currentScrollOffset = Math.min(currentScrollOffset - (totalWidth - itemOffset - additionalOffset), widths.content - widths.wrapper)\n  }\n\n  return rtl ? -currentScrollOffset : currentScrollOffset\n}\n\nexport function calculateCenteredOffset (\n  selectedElement: HTMLElement,\n  widths: Widths,\n  rtl: boolean\n): number {\n  const { offsetLeft, clientWidth } = selectedElement\n\n  if (rtl) {\n    const offsetCentered = widths.content - offsetLeft - clientWidth / 2 - widths.wrapper / 2\n    return -Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n  } else {\n    const offsetCentered = offsetLeft + clientWidth / 2 - widths.wrapper / 2\n    return Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n  }\n}\n\nexport const BaseSlideGroup = mixins<options &\n/* eslint-disable indent */\n  ExtractVue<[\n    typeof BaseItemGroup,\n    typeof Mobile,\n  ]>\n/* eslint-enable indent */\n>(\n  BaseItemGroup,\n  Mobile,\n  /* @vue/component */\n).extend({\n  name: 'base-slide-group',\n\n  directives: {\n    Resize,\n    Touch,\n  },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-slide-item--active',\n    },\n    centerActive: Boolean,\n    nextIcon: {\n      type: String,\n      default: '$next',\n    },\n    prevIcon: {\n      type: String,\n      default: '$prev',\n    },\n    showArrows: {\n      type: [Boolean, String],\n      validator: v => (\n        typeof v === 'boolean' || [\n          'always',\n          'desktop',\n          'mobile',\n        ].includes(v)\n      ),\n    },\n  },\n\n  data: () => ({\n    internalItemsLength: 0,\n    isOverflowing: false,\n    resizeTimeout: 0,\n    startX: 0,\n    isSwipingHorizontal: false,\n    isSwiping: false,\n    scrollOffset: 0,\n    widths: {\n      content: 0,\n      wrapper: 0,\n    },\n  }),\n\n  computed: {\n    canTouch (): boolean {\n      return typeof window !== 'undefined'\n    },\n    __cachedNext (): VNode {\n      return this.genTransition('next')\n    },\n    __cachedPrev (): VNode {\n      return this.genTransition('prev')\n    },\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-slide-group': true,\n        'v-slide-group--has-affixes': this.hasAffixes,\n        'v-slide-group--is-overflowing': this.isOverflowing,\n      }\n    },\n    hasAffixes (): Boolean {\n      switch (this.showArrows) {\n        // Always show arrows on desktop & mobile\n        case 'always': return true\n\n        // Always show arrows on desktop\n        case 'desktop': return !this.isMobile\n\n        // Show arrows on mobile when overflowing.\n        // This matches the default 2.2 behavior\n        case true: return this.isOverflowing || Math.abs(this.scrollOffset) > 0\n\n        // Always show on mobile\n        case 'mobile': return (\n          this.isMobile ||\n          (this.isOverflowing || Math.abs(this.scrollOffset) > 0)\n        )\n\n        // https://material.io/components/tabs#scrollable-tabs\n        // Always show arrows when\n        // overflowed on desktop\n        default: return (\n          !this.isMobile &&\n          (this.isOverflowing || Math.abs(this.scrollOffset) > 0)\n        )\n      }\n    },\n    hasNext (): boolean {\n      if (!this.hasAffixes) return false\n\n      const { content, wrapper } = this.widths\n\n      // Check one scroll ahead to know the width of right-most item\n      return content > Math.abs(this.scrollOffset) + wrapper\n    },\n    hasPrev (): boolean {\n      return this.hasAffixes && this.scrollOffset !== 0\n    },\n  },\n\n  watch: {\n    internalValue: 'setWidths',\n    // When overflow changes, the arrows alter\n    // the widths of the content and wrapper\n    // and need to be recalculated\n    isOverflowing: 'setWidths',\n    scrollOffset (val) {\n      const scroll =\n        val <= 0\n          ? bias(-val)\n          : val > this.widths.content - this.widths.wrapper\n            ? -(this.widths.content - this.widths.wrapper) + bias(this.widths.content - this.widths.wrapper - val)\n            : -val\n\n      this.$refs.content.style.transform = `translateX(${scroll}px)`\n    },\n  },\n\n  beforeUpdate () {\n    this.internalItemsLength = (this.$children || []).length\n  },\n\n  updated () {\n    if (this.internalItemsLength === (this.$children || []).length) return\n    this.setWidths()\n  },\n\n  methods: {\n    onScroll () {\n      this.$refs.wrapper.scrollLeft = 0\n    },\n    onFocusin (e: FocusEvent) {\n      if (!this.isOverflowing) return\n\n      // Focused element is likely to be the root of an item, so a\n      // breadth-first search will probably find it in the first iteration\n      for (const el of composedPath(e)) {\n        for (const vm of this.items) {\n          if (vm.$el === el) {\n            this.scrollOffset = calculateUpdatedOffset(\n              vm.$el as HTMLElement,\n              this.widths,\n              this.$vuetify.rtl,\n              this.scrollOffset\n            )\n            return\n          }\n        }\n      }\n    },\n    // Always generate next for scrollable hint\n    genNext (): VNode | null {\n      const slot = this.$scopedSlots.next\n        ? this.$scopedSlots.next({})\n        : this.$slots.next || this.__cachedNext\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__next',\n        class: {\n          'v-slide-group__next--disabled': !this.hasNext,\n        },\n        on: {\n          click: () => this.onAffixClick('next'),\n        },\n        key: 'next',\n      }, [slot])\n    },\n    genContent (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__content',\n        ref: 'content',\n        on: {\n          focusin: this.onFocusin,\n        },\n      }, this.$slots.default)\n    },\n    genData (): object {\n      return {\n        class: this.classes,\n        directives: [{\n          name: 'resize',\n          value: this.onResize,\n        }],\n      }\n    },\n    genIcon (location: 'prev' | 'next'): VNode | null {\n      let icon = location\n\n      if (this.$vuetify.rtl && location === 'prev') {\n        icon = 'next'\n      } else if (this.$vuetify.rtl && location === 'next') {\n        icon = 'prev'\n      }\n\n      const upperLocation = `${location[0].toUpperCase()}${location.slice(1)}`\n      const hasAffix = (this as any)[`has${upperLocation}`]\n\n      if (\n        !this.showArrows &&\n        !hasAffix\n      ) return null\n\n      return this.$createElement(VIcon, {\n        props: {\n          disabled: !hasAffix,\n        },\n      }, (this as any)[`${icon}Icon`])\n    },\n    // Always generate prev for scrollable hint\n    genPrev (): VNode | null {\n      const slot = this.$scopedSlots.prev\n        ? this.$scopedSlots.prev({})\n        : this.$slots.prev || this.__cachedPrev\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__prev',\n        class: {\n          'v-slide-group__prev--disabled': !this.hasPrev,\n        },\n        on: {\n          click: () => this.onAffixClick('prev'),\n        },\n        key: 'prev',\n      }, [slot])\n    },\n    genTransition (location: 'prev' | 'next') {\n      return this.$createElement(VFadeTransition, [this.genIcon(location)])\n    },\n    genWrapper (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__wrapper',\n        directives: [{\n          name: 'touch',\n          value: {\n            start: (e: TouchEvent) => this.overflowCheck(e, this.onTouchStart),\n            move: (e: TouchEvent) => this.overflowCheck(e, this.onTouchMove),\n            end: (e: TouchEvent) => this.overflowCheck(e, this.onTouchEnd),\n          },\n        }],\n        ref: 'wrapper',\n        on: {\n          scroll: this.onScroll,\n        },\n      }, [this.genContent()])\n    },\n    calculateNewOffset (direction: 'prev' | 'next', widths: Widths, rtl: boolean, currentScrollOffset: number) {\n      const sign = rtl ? -1 : 1\n      const newAbosluteOffset = sign * currentScrollOffset +\n        (direction === 'prev' ? -1 : 1) * widths.wrapper\n\n      return sign * Math.max(Math.min(newAbosluteOffset, widths.content - widths.wrapper), 0)\n    },\n    onAffixClick (location: 'prev' | 'next') {\n      this.$emit(`click:${location}`)\n      this.scrollTo(location)\n    },\n    onResize () {\n      /* istanbul ignore next */\n      if (this._isDestroyed) return\n\n      this.setWidths()\n    },\n    onTouchStart (e: TouchEvent) {\n      const { content } = this.$refs\n\n      this.startX = this.scrollOffset + e.touchstartX as number\n\n      content.style.setProperty('transition', 'none')\n      content.style.setProperty('willChange', 'transform')\n    },\n    onTouchMove (e: TouchEvent) {\n      if (!this.canTouch) return\n\n      if (!this.isSwiping) {\n        // only calculate disableSwipeHorizontal during the first onTouchMove invoke\n        // in order to ensure disableSwipeHorizontal value is consistent between onTouchStart and onTouchEnd\n        const diffX = e.touchmoveX - e.touchstartX\n        const diffY = e.touchmoveY - e.touchstartY\n        this.isSwipingHorizontal = Math.abs(diffX) > Math.abs(diffY)\n        this.isSwiping = true\n      }\n\n      if (this.isSwipingHorizontal) {\n        // sliding horizontally\n        this.scrollOffset = this.startX - e.touchmoveX\n        // temporarily disable window vertical scrolling\n        document.documentElement.style.overflowY = 'hidden'\n      }\n    },\n    onTouchEnd () {\n      if (!this.canTouch) return\n\n      const { content, wrapper } = this.$refs\n      const maxScrollOffset = content.clientWidth - wrapper.clientWidth\n\n      content.style.setProperty('transition', null)\n      content.style.setProperty('willChange', null)\n\n      if (this.$vuetify.rtl) {\n        /* istanbul ignore else */\n        if (this.scrollOffset > 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset <= -maxScrollOffset) {\n          this.scrollOffset = -maxScrollOffset\n        }\n      } else {\n        /* istanbul ignore else */\n        if (this.scrollOffset < 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset >= maxScrollOffset) {\n          this.scrollOffset = maxScrollOffset\n        }\n      }\n\n      this.isSwiping = false\n      // rollback whole page scrolling to default\n      document.documentElement.style.removeProperty('overflow-y')\n    },\n    overflowCheck (e: TouchEvent, fn: (e: TouchEvent) => void) {\n      e.stopPropagation()\n      this.isOverflowing && fn(e)\n    },\n    scrollIntoView /* istanbul ignore next */ () {\n      if (!this.selectedItem && this.items.length) {\n        const lastItemPosition = this.items[this.items.length - 1].$el.getBoundingClientRect()\n        const wrapperPosition = this.$refs.wrapper.getBoundingClientRect()\n\n        if (\n          (this.$vuetify.rtl && wrapperPosition.right < lastItemPosition.right) ||\n          (!this.$vuetify.rtl && wrapperPosition.left > lastItemPosition.left)\n        ) {\n          this.scrollTo('prev')\n        }\n      }\n\n      if (!this.selectedItem) {\n        return\n      }\n\n      if (\n        this.selectedIndex === 0 ||\n        (!this.centerActive && !this.isOverflowing)\n      ) {\n        this.scrollOffset = 0\n      } else if (this.centerActive) {\n        this.scrollOffset = calculateCenteredOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl\n        )\n      } else if (this.isOverflowing) {\n        this.scrollOffset = calculateUpdatedOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl,\n          this.scrollOffset\n        )\n      }\n    },\n    scrollTo /* istanbul ignore next */ (location: 'prev' | 'next') {\n      this.scrollOffset = this.calculateNewOffset(location, {\n        // Force reflow\n        content: this.$refs.content ? this.$refs.content.clientWidth : 0,\n        wrapper: this.$refs.wrapper ? this.$refs.wrapper.clientWidth : 0,\n      }, this.$vuetify.rtl, this.scrollOffset)\n    },\n    setWidths /* istanbul ignore next */  () {\n      window.requestAnimationFrame(() => {\n        const { content, wrapper } = this.$refs\n\n        this.widths = {\n          content: content ? content.clientWidth : 0,\n          wrapper: wrapper ? wrapper.clientWidth : 0,\n        }\n\n        // https://github.com/vuetifyjs/vuetify/issues/13212\n        // We add +1 to the wrappers width to prevent an issue where the `clientWidth`\n        // gets calculated wrongly by the browser if using a different zoom-level.\n        this.isOverflowing = this.widths.wrapper + 1 < this.widths.content\n\n        this.scrollIntoView()\n      })\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.genData(), [\n      this.genPrev(),\n      this.genWrapper(),\n      this.genNext(),\n    ])\n  },\n})\n\nexport default BaseSlideGroup.extend({\n  name: 'v-slide-group',\n\n  provide (): object {\n    return {\n      slideGroup: this,\n    }\n  },\n})\n","// Extensions\nimport { BaseSlideGroup } from '../VSlideGroup/VSlideGroup'\n\n// Components\nimport VTab from './VTab'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport SSRBootable from '../../mixins/ssr-bootable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { Route } from 'vue-router'\nimport { VNode } from 'vue'\n\ntype VTabInstance = InstanceType<typeof VTab>\n\nexport default mixins(\n  BaseSlideGroup,\n  SSRBootable,\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-tabs-bar',\n\n  provide () {\n    return {\n      tabsBar: this,\n    }\n  },\n\n  computed: {\n    classes () {\n      return {\n        ...BaseSlideGroup.options.computed.classes.call(this),\n        'v-tabs-bar': true,\n        'v-tabs-bar--is-mobile': this.isMobile,\n        // TODO: Remove this and move to v-slide-group\n        'v-tabs-bar--show-arrows': this.showArrows,\n        ...this.themeClasses,\n      }\n    },\n  },\n\n  watch: {\n    items: 'callSlider',\n    internalValue: 'callSlider',\n    $route: 'onRouteChange',\n  },\n\n  methods: {\n    callSlider () {\n      if (!this.isBooted) return\n\n      this.$emit('call:slider')\n    },\n    genContent () {\n      const render = BaseSlideGroup.options.methods.genContent.call(this)\n\n      render.data = render.data || {}\n      render.data.staticClass += ' v-tabs-bar__content'\n\n      return render\n    },\n    onRouteChange (val: Route, oldVal: Route) {\n      /* istanbul ignore next */\n      if (this.mandatory) return\n\n      const items = this.items as unknown as VTabInstance[]\n      const newPath = val.path\n      const oldPath = oldVal.path\n\n      let hasNew = false\n      let hasOld = false\n\n      for (const item of items) {\n        if (item.to === oldPath) hasOld = true\n        else if (item.to === newPath) hasNew = true\n\n        if (hasNew && hasOld) break\n      }\n\n      // If we have an old item and not a new one\n      // it's assumed that the user navigated to\n      // a path that is not present in the items\n      if (!hasNew && hasOld) this.internalValue = undefined\n    },\n  },\n\n  render (h): VNode {\n    const render = BaseSlideGroup.options.render.call(this, h)\n\n    render.data!.attrs = {\n      role: 'tablist',\n    }\n\n    return render\n  },\n})\n","// Mixins\nimport Colorable from '../../mixins/colorable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue/types'\n\n/* @vue/component */\nexport default mixins(Colorable).extend({\n  name: 'v-tabs-slider',\n\n  render (h): VNode {\n    return h('div', this.setBackgroundColor(this.color, {\n      staticClass: 'v-tabs-slider',\n    }))\n  },\n})\n","// Styles\nimport './VTabs.sass'\n\n// Components\nimport VTabsBar from './VTabsBar'\nimport VTabsItems from './VTabsItems'\nimport VTabsSlider from './VTabsSlider'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Proxyable from '../../mixins/proxyable'\nimport Themeable from '../../mixins/themeable'\n\n// Directives\nimport Resize from '../../directives/resize'\n\n// Utilities\nimport { convertToUnit } from '../../util/helpers'\nimport { ExtractVue } from './../../util/mixins'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue/types'\n\nconst baseMixins = mixins(\n  Colorable,\n  Proxyable,\n  Themeable\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $refs: {\n    items: InstanceType<typeof VTabsBar>\n  }\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-tabs',\n\n  directives: {\n    Resize,\n  },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: '',\n    },\n    alignWithTitle: Boolean,\n    backgroundColor: String,\n    centerActive: Boolean,\n    centered: Boolean,\n    fixedTabs: Boolean,\n    grow: Boolean,\n    height: {\n      type: [Number, String],\n      default: undefined,\n    },\n    hideSlider: Boolean,\n    iconsAndText: Boolean,\n    mobileBreakpoint: [String, Number],\n    nextIcon: {\n      type: String,\n      default: '$next',\n    },\n    optional: Boolean,\n    prevIcon: {\n      type: String,\n      default: '$prev',\n    },\n    right: Boolean,\n    showArrows: [Boolean, String],\n    sliderColor: String,\n    sliderSize: {\n      type: [Number, String],\n      default: 2,\n    },\n    vertical: Boolean,\n  },\n\n  data () {\n    return {\n      resizeTimeout: 0,\n      slider: {\n        height: null as null | number,\n        left: null as null | number,\n        right: null as null | number,\n        top: null as null | number,\n        width: null as null | number,\n      },\n      transitionTime: 300,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-tabs--align-with-title': this.alignWithTitle,\n        'v-tabs--centered': this.centered,\n        'v-tabs--fixed-tabs': this.fixedTabs,\n        'v-tabs--grow': this.grow,\n        'v-tabs--icons-and-text': this.iconsAndText,\n        'v-tabs--right': this.right,\n        'v-tabs--vertical': this.vertical,\n        ...this.themeClasses,\n      }\n    },\n    isReversed (): boolean {\n      return this.$vuetify.rtl && this.vertical\n    },\n    sliderStyles (): object {\n      return {\n        height: convertToUnit(this.slider.height),\n        left: this.isReversed ? undefined : convertToUnit(this.slider.left),\n        right: this.isReversed ? convertToUnit(this.slider.right) : undefined,\n        top: this.vertical ? convertToUnit(this.slider.top) : undefined,\n        transition: this.slider.left != null ? null : 'none',\n        width: convertToUnit(this.slider.width),\n      }\n    },\n    computedColor (): string {\n      if (this.color) return this.color\n      else if (this.isDark && !this.appIsDark) return 'white'\n      else return 'primary'\n    },\n  },\n\n  watch: {\n    alignWithTitle: 'callSlider',\n    centered: 'callSlider',\n    centerActive: 'callSlider',\n    fixedTabs: 'callSlider',\n    grow: 'callSlider',\n    iconsAndText: 'callSlider',\n    right: 'callSlider',\n    showArrows: 'callSlider',\n    vertical: 'callSlider',\n    '$vuetify.application.left': 'onResize',\n    '$vuetify.application.right': 'onResize',\n    '$vuetify.rtl': 'onResize',\n  },\n\n  mounted () {\n    this.$nextTick(() => {\n      window.setTimeout(this.callSlider, 30)\n    })\n  },\n\n  methods: {\n    callSlider () {\n      if (\n        this.hideSlider ||\n        !this.$refs.items ||\n        !this.$refs.items.selectedItems.length\n      ) {\n        this.slider.width = 0\n        return false\n      }\n\n      this.$nextTick(() => {\n        // Give screen time to paint\n        const activeTab = this.$refs.items.selectedItems[0]\n        /* istanbul ignore if */\n        if (!activeTab || !activeTab.$el) {\n          this.slider.width = 0\n          this.slider.left = 0\n          return\n        }\n        const el = activeTab.$el as HTMLElement\n\n        this.slider = {\n          height: !this.vertical ? Number(this.sliderSize) : el.scrollHeight,\n          left: this.vertical ? 0 : el.offsetLeft,\n          right: this.vertical ? 0 : el.offsetLeft + el.offsetWidth,\n          top: el.offsetTop,\n          width: this.vertical ? Number(this.sliderSize) : el.scrollWidth,\n        }\n      })\n\n      return true\n    },\n    genBar (items: VNode[], slider: VNode | null) {\n      const data = {\n        style: {\n          height: convertToUnit(this.height),\n        },\n        props: {\n          activeClass: this.activeClass,\n          centerActive: this.centerActive,\n          dark: this.dark,\n          light: this.light,\n          mandatory: !this.optional,\n          mobileBreakpoint: this.mobileBreakpoint,\n          nextIcon: this.nextIcon,\n          prevIcon: this.prevIcon,\n          showArrows: this.showArrows,\n          value: this.internalValue,\n        },\n        on: {\n          'call:slider': this.callSlider,\n          change: (val: any) => {\n            this.internalValue = val\n          },\n        },\n        ref: 'items',\n      }\n\n      this.setTextColor(this.computedColor, data)\n      this.setBackgroundColor(this.backgroundColor, data)\n\n      return this.$createElement(VTabsBar, data, [\n        this.genSlider(slider),\n        items,\n      ])\n    },\n    genItems (items: VNode | null, item: VNode[]) {\n      // If user provides items\n      // opt to use theirs\n      if (items) return items\n\n      // If no tabs are provided\n      // render nothing\n      if (!item.length) return null\n\n      return this.$createElement(VTabsItems, {\n        props: {\n          value: this.internalValue,\n        },\n        on: {\n          change: (val: any) => {\n            this.internalValue = val\n          },\n        },\n      }, item)\n    },\n    genSlider (slider: VNode | null) {\n      if (this.hideSlider) return null\n\n      if (!slider) {\n        slider = this.$createElement(VTabsSlider, {\n          props: { color: this.sliderColor },\n        })\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-tabs-slider-wrapper',\n        style: this.sliderStyles,\n      }, [slider])\n    },\n    onResize () {\n      if (this._isDestroyed) return\n\n      clearTimeout(this.resizeTimeout)\n      this.resizeTimeout = window.setTimeout(this.callSlider, 0)\n    },\n    parseNodes () {\n      let items = null\n      let slider = null\n      const item = []\n      const tab = []\n      const slot = this.$slots.default || []\n      const length = slot.length\n\n      for (let i = 0; i < length; i++) {\n        const vnode = slot[i]\n\n        if (vnode.componentOptions) {\n          switch (vnode.componentOptions.Ctor.options.name) {\n            case 'v-tabs-slider': slider = vnode\n              break\n            case 'v-tabs-items': items = vnode\n              break\n            case 'v-tab-item': item.push(vnode)\n              break\n            // case 'v-tab' - intentionally omitted\n            default: tab.push(vnode)\n          }\n        } else {\n          tab.push(vnode)\n        }\n      }\n\n      /**\n       * tab: array of `v-tab`\n       * slider: single `v-tabs-slider`\n       * items: single `v-tabs-items`\n       * item: array of `v-tab-item`\n       */\n      return { tab, slider, items, item }\n    },\n  },\n\n  render (h): VNode {\n    const { tab, slider, items, item } = this.parseNodes()\n\n    return h('div', {\n      staticClass: 'v-tabs',\n      class: this.classes,\n      directives: [{\n        name: 'resize',\n        modifiers: { quiet: true },\n        value: this.onResize,\n      }],\n    }, [\n      this.genBar(tab, slider),\n      this.genItems(items, item),\n    ])\n  },\n})\n"],"sourceRoot":""}